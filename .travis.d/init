#!/bin/sh

# configure path to include /usr/local
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# can't do much without proc!
mount -t proc none "/proc"

# pseudo-terminal devices
mkdir -p "/dev/pts"
mount -t devpts none "/dev/pts"

# shared memory a good idea
mkdir -p "/dev/shm"
mount -t tmpfs none "/dev/shm"

# sysfs a good idea
mount -t sysfs none "/sys"

# pidfiles and such like
mkdir -p "/var/run"
mount -t tmpfs none "/var/run"

# takes the pain out of cgroups
cgroups-mount

# some storage for docker
mkdir -p "/var/lib/docker"
mount none "/var/lib/docker" -t hostfs -o "/var/lib/docker"

mount -t hostfs -o "$LOGDIR" none "/var/log"
mount -t tmpfs none "/var/lib/docker"

# echo 0 > /proc/sys/kernel/printk

# configure networking
ip addr add 127.0.0.1 dev lo
ip link set lo up
ip addr add 10.1.1.1/24 dev eth0
ip link set eth0 up
ip route add default via 10.1.1.254
echo "1" > "/proc/sys/net/ipv4/ip_forward"

# This is to handle when /etc/resolv.conf -> /run/resolvconf/resolv.conf
if [ -L "/etc/resolv.conf" ]; then
	mkdir -p "$(dirname "$(readlink --canonicalize-missing "/etc/resolv.conf")")"
	if [ ! -f "/etc/resolv.conf" ]; then
		cat "/var/log/resolv.conf" > "/etc/resolv.conf"
	fi
fi
if [ -f "/var/log/output" ]; then
	exec >> "/var/log/output"
	exec 2>> "/var/log/output"
fi

# sh "/var/log/cmd"
"$@"
echo "$?" >"/var/log/status"
# This will make sure that the main "tail" process had the opportunity
# to display everything before being killed by UML misbehavior.
sleep 1
